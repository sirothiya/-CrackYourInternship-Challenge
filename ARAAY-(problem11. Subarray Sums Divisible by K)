 Subarray Sums Divisible by K
 Given an integer array nums and an integer k, return the number of non-empty subarrays that have a sum divisible by k.
 A subarray is a contiguous part of an array.
 
 Constraints:
 1 <= nums.length <= 3 * 104
 -104 <= nums[i] <= 104
 2 <= k <= 104
 
 
 ////MY SOLUTION////
 
 class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        int n=nums.size();
        int sum=0;int r;int count=0;
        map<int,int>freq;
        freq[0]=1;
        for(int i=0;i<n;i++){
            sum+=nums[i];
            r=sum%k;
            if(r<0){
                r+=k;
            }
            int value=0;
           if(freq.find(r)!=freq.end()){
           value=freq[r];
               freq[r]++;
           }
            else
                freq[r]++;
            count+=value;
        }
    
        return count;
    }
};
