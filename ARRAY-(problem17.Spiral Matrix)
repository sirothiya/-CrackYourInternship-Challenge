Spiral Matrix

Given an m x n matrix, return all elements of the matrix in spiral order.

 Constraints:
m == matrix.length
n == matrix[i].length
1 <= m, n <= 10
-100 <= matrix[i][j] <= 100

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int>ans;
        int n=matrix.size();
        int m=matrix[0].size();
        int d=0;
        int row_start=0,col_start=0,row_end=n-1,col_end=m-1;
        while(row_start<=row_end && col_start<=col_end ){
           
            for(int col=col_start;col<=col_end;col++)
                ans.push_back(matrix[row_start][col]);
            row_start++;
            for(int row=row_start;row<=row_end;row++)
                ans.push_back(matrix[row][col_end]);
            col_end--;
            if(row_start<=row_end){
                for(int col=col_end;col>=col_start;col--)
                    ans.push_back(matrix[row_end][col]);
                row_end--;
            }
            if(col_start<=col_end){
                for(int row=row_end;row>=row_start;row--)
                    ans.push_back(matrix[row][col_start]);
                col_start++;
            }
         }
        
        return ans;
    }
};
