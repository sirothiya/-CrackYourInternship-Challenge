 Majority Element
 
 Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2

//////solution of the problem

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        map<int,int>frq;
        for(int i=0;i<nums.size();i++)
            frq[nums[i]]++;
        map<int, int>::iterator itr; 
        int count=0;int ans;
        for(itr=frq.begin();itr!=frq.end();itr++){
            if(itr->second >count){
                count=itr->second;
                ans=itr->first;
            }
        }
        return ans;
    }
};
